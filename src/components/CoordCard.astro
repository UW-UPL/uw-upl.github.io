---
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faLinkedin, faGithub } from "@fortawesome/free-brands-svg-icons";
import { faLink } from "@fortawesome/free-solid-svg-icons";
import type { CollectionEntry } from "astro:content";

let { coord, isHorizontal } = Astro.props;
let coordInfo = (coord as CollectionEntry<"coordinators">).data;

// a really convoluted way to I know, but this displays a grade only if the coord is active, and a study only if they have one
const titles = [
	...(coordInfo.isActive ? [coordInfo.grade] : []),
	...(coordInfo.study ? [coordInfo.study] : []),
];

// dynamically create coordCard links, with a specific icon and href
const coordLinks = [
	{
		givenLink: coordInfo.personalLink,
		link: coordInfo.personalLink,
		icon: faLink,
	},
	{
		givenLink: coordInfo.github,
		link: "https://github.com/" + coordInfo.github,
		icon: faGithub,
	},
	{
		givenLink: coordInfo.linkedIn,
		link: "https://www.linkedin.com/in/" + coordInfo.linkedIn,
		icon: faLinkedin,
	},
].filter((e) => e.givenLink); // filter out empty links/not given links

// styling depending on whether the card is being displayed horizontally or vertically (default)
const additionalCardStyles = isHorizontal
	? "flex flex-row min-h-56 h-full"
	: "pb-4";
const additionalImgStyles = isHorizontal
	? "max-h-60 rounded-l-md h-full flex-auto grow-0"
	: "inset-0 overflow-hidden rounded-t-md w-full";

const iconSizeStyle = isHorizontal ? "w-6" : "w-1/12";
---

<div
	class={"hover:-translate-y-1 hover:scale-110 duration-300 hover:-translate-y-1 hover:shadow-2xl hover:shadow-red-800/50 shadow-xl font-lato text-gray-700 h-fit block bg-red-50 rounded-md " +
		additionalCardStyles}
>
	{
		coordInfo.image && (
			<img
				src={`/profiles/${coord.data.image}`}
				alt={coordInfo.name}
				class={"aspect-square object-cover " + additionalImgStyles}
			/>
		)
	}

	<div class="px-3 flex flex-col">
		<p class="text-sm pt-3 pb-1">{titles.join(" Â· ")}</p>
		<h1 class="text-xl font-bold">{coordInfo.name}</h1>
		<div class="flex flex-row my-1">
			{
				coordLinks.map((e) => (
					<div class={"mr-2 my-auto " + iconSizeStyle}>
						<a href={e.link} rel="noopener nofollow" target="_blank">
							<FontAwesomeIcon icon={e.icon} />
						</a>
					</div>
				)) // turn links into icon buttons
			}
		</div>
		<p class="text-sm">{coordInfo.bio}</p>
	</div>
</div>
